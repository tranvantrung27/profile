/* Reset */
body {
    margin: 0;
    font-family: 'Inter', sans-serif;
    color: white;
    text-align: center;
    overflow: hidden;
    cursor: url('assets/mouse.png') 16 16, auto; /* Con trỏ chuột tùy chỉnh */
}
/* Đặt con trỏ tùy chỉnh mặc định */
body, button, input, select, textarea, .slider, .volume, a, a:hover {
    cursor: url('assets/mouse.png') 16 16, auto !important; /* Sử dụng con trỏ tùy chỉnh với điểm neo */
}

/* Áp dụng con trỏ tùy chỉnh cho slider và các thành phần tương tác */
input[type="range"] {
    cursor: url('assets/mouse.png') 16 16, pointer !important; /* Chỉ tay cho các slider */
}

/* Áp dụng cho tất cả các loại input và textarea */
input, textarea {
    cursor: url('assets/mouse.png') 16 16, text !important; /* Con trỏ text cho các ô nhập liệu */
}

/* Các phần tử hover như nút và liên kết */
button:hover, a:hover, input:hover, select:hover {
    cursor: url('assets/mouse.png') 16 16, pointer !important; /* Con trỏ chỉ tay khi hover */
}


/* Video nền */
#background-video {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1;
}
/* Lớp mờ */
#overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8); /* Màu nền mờ */
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

#overlay-message {
    text-align: center;
    position: relative; 
    bottom: 300px;
    transition: top 0.5s ease-in-out;
}

#overlay h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
}

#overlay p {
    font-size: 1.2rem;
    opacity: 0.8;
    margin: 0;
    animation: blink 1.5s infinite;
}

/* Hiệu ứng nhấp nháy */
@keyframes blink {
    0%, 100% {
        opacity: 0.8;
    }
    50% {
        opacity: 1;
    }
}

/* Ẩn lớp mờ */
#overlay.hidden {
    display: none;
}


/* Vị trí chính xác của slider */
#volume-control {
    position: absolute;
    top: 80px;
    left: 20px;
    z-index: 10;
}

/* Tối ưu giao diện slider */
.slider {
    --slider-width: 150px; /* Tăng chiều rộng */
    --slider-height: 15px;
    --slider-bg: rgba(82, 82, 82, 0.5); /* Tăng độ rõ */
    --slider-border-radius: 5px;
    --level-color: #00bfff; /* Màu xanh nổi bật hơn */
    --level-transition-duration: 0.3s; /* Hiệu ứng nhanh hơn */
    --icon-margin: 10px;
    --icon-color: var(--slider-bg);
    --icon-size: 24px;
}


.slider {
    position: relative;
    cursor: pointer;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}

.slider .volume {
    display: inline-block;
    vertical-align: top;
    margin-right: var(--icon-margin);
    color: var(--icon-color);
    width: var(--icon-size);
    height: auto;
    position: absolute;
    left: 18px;
    pointer-events: none;
    transition-duration: 0.5s;
}

.slider .level {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: var(--slider-width);
    height: var(--slider-height);
    background: var(--slider-bg);
    overflow: hidden;
    border-radius: var(--slider-border-radius);
    -webkit-transition: height var(--level-transition-duration);
    -o-transition: height var(--level-transition-duration);
    transition: height var(--level-transition-duration);
    cursor: inherit;
    transform: rotate(270deg);
}

.slider .level::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 0px;
    height: 0px;
    -webkit-box-shadow: -200px 0 0 200px var(--level-color);
    box-shadow:
        -100px 0 5px 100px var(--level-color),
        -100px 0px 20px 100px var(--level-color);
}

.slider .level:hover ~ .volume {
    color: var(--level-color);
    opacity: 0.6;
}

.slider .level::-moz-range-thumb {
    width: 0;
    height: 0;
    border-radius: 0;
    border: none;
    box-shadow:
        -100px 0 5px 100px var(--level-color),
        -100px 0px 20px 100px var(--level-color);
}
/* Lớp phủ dạng nhỏ bao quanh nội dung chính */
.background-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    max-width: 600px;
    padding: 100px;
    background: rgba(61, 57, 57, 0.7);
    border-radius: 10px;
    z-index: 2;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
    text-align: center;
    color: white;
}

/* Nội dung chính */
.main-content {
    font-family: 'Inter', sans-serif;
}

.profile-picture {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    margin-bottom: 15px;
}

h1, p {
    margin: 5px 0;
}

h1 {
    font-size: 24px;
    font-weight: 600;
}

p {
    font-size: 14px;
}

.social-media a {
    color: white;
    margin: 0 10px;
    font-size: 18px;
    transition: color 0.3s;
}

.social-media a:hover {
    color: #00bfff;
}

/* Profile Section */
#main {
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    z-index: 2;
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: relative;
    z-index: 2;
}

.large-profile {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    border: 3px solid white;
    margin-bottom: 10px;
}
.card {
    --cardbg: 245, 245, 245;
    --cardBase: 235, 16, 206;
    --cardText: 100, 100, 100;
    --cardTextBtn: 106, 16, 88;
    --cardsquares: 156, 113, 227;
    display: flex;
    flex-flow: column nowrap;
    place-items: center;
    text-align: center;
    border: 1px solid #ccc;
    box-shadow: 0 0 3em rgba(var(--cardBase), .25),
    inset 0 -.25em 1px rgba(var(--cardBase), .125);
    border-radius: 4px;
    background: rgba(var(--cardbg), 1);
    position: relative;
    width: 220px;
    height: 310px;
    perspective: 1000px;
    z-index: 0;
    transition: all 1s ease-out;
  }
  
  .card:hover {
    filter: grayscale(0%);
    scale: 1.025;
    box-shadow: 0 0 5em rgba(var(--cardBase), .5);
  }
  
  .card::after,
  .card::before {
    content: '';
    width: 200px;
    height: 50%;
    display: block;
    background-color: rgba(var(--cardsquares), .5);
    filter: blur(10px);
    position: absolute;
    transition: all 5s ease-out;
    opacity: .1;
    z-index: 0;
  }
  
  .card:hover::after,
  .card:hover::before {
    opacity: .5;
    rotate: 60deg;
  }
  
  .card:hover::after {
    translate: 100% 0;
  }
  
  .card:hover::before {
    translate: -100% 0;
  }
  
  .card .card-title {
    color: rgba(var(--cardText), .75);
    font-size: 1.1em;
    font-weight: 600;
    margin: .5em;
    position: relative;
    transition: all .3s ease-out;
    z-index: 100;
    text-shadow: 0px 0px 0px rgba(var(--cardText), .25);
  }
  
  .card:hover h3 {
    color: rgba(var(--cardText), 1);
    text-shadow: 0px 8px 5px rgba(var(--cardText), .35);
  }
  
  .card:hover span {
    filter: grayscale(0%);
  }
  
  /* Inner card */
  .card-info::after {
    left: -6rem;
    bottom: 0;
  }
  
  .card-info::before {
    right: -6rem;
    top: 1rem;
  }
  
  /* Avatar container */
  .card-info span {
    color: rgba(var(--cardBase), 1);
    display: flex;
    place-items: center;
    text-align: center;
    border-radius: 50%;
    overflow: hidden;
    background-color: rgba(var(--cardBase), .5);
    height: 80px;
    width: 50%;
    box-shadow: inset 0px 2px 4px rgba(var(--cardBase), .95),
    inset 0px 2px 40px rgba(var(--cardbg), .95);
    position: relative;
    transition: all .3s ease-out .1s;
    filter: grayscale(75%);
    z-index: 0;
  }
  
  .card-info span:hover .avatar {
    scale: 1.5;
  }
  
  .avatar {
    width: 80px; /* Đặt kích thước ảnh */
    height: 80px;
    border-radius: 50%; /* Bo tròn ảnh */
    object-fit: cover; /* Đảm bảo ảnh vừa khít mà không bị méo */
    margin-bottom: 10px; /* Khoảng cách dưới ảnh */
}

  
  /* Inner card container and UI */
  .card-info {
    --angle: 0deg;
    display: flex;
    flex-flow: column nowrap;
    place-items: center;
    padding: 1em;
    margin: 0 .75em;
    color: rgba(var(--cardText), 1);
    background-color: rgba(250, 246, 246, 1);
    transition: all .5s ease-out;
    animation: animateBorder 10s linear infinite reverse;
    border: .15em solid;
    position: relative;
    z-index: 10;
    border-image: linear-gradient(var(--angle), rgba(var(--cardbg), 1), rgba(var(--cardBase), .5), rgba(var(--cardbg), 1)) 1;
  }
  
  .card-info p {
    color: rgba(var(--cardText), 1);
    line-height: 1.25em;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 3;
    font-size: 1em;
    margin: 1em 0;
    transition: all .3s ease-out .3s;
  }
  
  .card-info .btn {
    display: block;
    padding: 8px 16px;
    background-color: rgba(var(--cardBase), .35);
    color: rgba(var(--cardTextBtn), .75);
    text-decoration: none;
    border-radius: 4px;
    font-size: .85em;
    transition: all 0.3s ease-in-out;
  }
  
  .card-info .btn:hover {
    cursor: pointer;
    background-color: rgba(var(--cardsquares), .35);
  }
  
  .card-info .btn:active {
    box-shadow: inset 0px -2px 3px rgba(var(--cardBase), .25);
  }
  
  /* Card chckbox active state */
  .card input[type="checkbox"] {
    visibility: hidden;
  }
  
  .card:hover:has(#toggle:checked) .card-title {
    text-shadow: 0px 2px 5px rgba(var(--cardText), .35);
  }
  
  .card:has(#toggle:checked) {
    border-radius: 10px;
    height: 295px;
  }
  
  .card:has(#toggle:checked) .card-info > *:not(.btn):not(span) {
    opacity: 0;
  }
  
  .card:has(#toggle:checked) .card-info {
    translate: 0 -20%;
    border-width: 1px;
    border: none;
    box-shadow: inset 0 0 5px rgba(var(--cardBase), .5),
    inset 0px 0px 2px rgba(var(--cardText), .25),
    inset 0px 30px 40px rgba(var(--cardBase), .25);
    border-radius: 10px;
  }
  
  .card:has(#toggle:checked) .card-info span {
    translate: 0 75%;
  }
  
  .card:has(#toggle:checked) .card-info p {
    transition: all .1s ease-out;
  }
  
  .card:has(#toggle:checked) .card-links {
    opacity: 1;
    top: -2rem;
  }
  
  .card #toggle {
    visibility: hidden;
  }
  
  @keyframes animateBorder {
    to {
      --angle: 360deg;
    }
  }
  
  @property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
  }

  /***********Facebook */
  .facebook {
    transition: none 0.5s ease;
    display: flex;
    align-items: center;
    position: absolute; 
    top: 50px; /* Canh giữa chiều dọc */
    right: 210px; /* Đẩy nút ra ngoài bên phải card */
    transform: translateY(-50%); /* Canh chỉnh chính giữa */
    padding-left: 10px;
    padding-right: 10px;
    width: 130px;
    height: 50px;
    gap: 10px;
    border: none;
    background-color: #4267B2;
    color: white;
    border-radius: 15px;
    cursor: pointer;
  }
  
  .facebook-text {
    transition: none 0.3s ease;
    font-weight: bold;
    font-size: 1rem;
  }
  
  .facebook:hover .facebook-text {
    display: none;
    position: absolute;
  }
  
  .facebook-svg {
    width: 23px;
    height: 23px;
    transition: 0.8s;
  }
  
  .facebook:hover .facebook-svg {
    margin-left: 40px;
    display: block;
    transform: scale(1.2);
  }
  
  .main-content {
    position: relative; /* Đảm bảo card và facebook được căn chỉnh đúng */
  }
  
  /* From Uiverse.io by faxriddin20 */ 
.instagram {
  transition: none 0.5s ease;
  display: flex;
  align-items: center;
  position: absolute; 
  top: 120px; /* Canh giữa chiều dọc */
  right: 210px; /* Đẩy nút ra ngoài bên phải card */
  transform: translateY(-50%); /* Canh chỉnh chính giữa */
  padding-left: 10px;
  padding-right: 10px;
  width: 130px;
  height: 50px;
  gap: 10px;
  border: none;
  background-color: #C13584;
  color: white;
  border-radius: 15px;
  cursor: pointer;
}

.instagram-text {
  transition: none 0.3s ease;
  font-weight: bold;
  font-size: 1rem;
}

.instagram:hover .instagram-text {
  display: none;
  position: absolute;
}

.instagram-svg {
  width: 23px;
  height: 23px;
  transition: 0.8s;
}

.instagram:hover .instagram-svg {
  margin-left: 40px;
  display: block;
  transform: scale(1.2);
}



.tiktok {
  transition: none 0.5s ease;
  display: flex;
  align-items: center;
  position: absolute; 
  top: 190px; /* Canh giữa chiều dọc */
  right: 210px; /* Đẩy nút ra ngoài bên phải card */
  transform: translateY(-50%); /* Canh chỉnh chính giữa */
  padding-left: 10px;
  padding-right: 10px;
  width: 130px;
  height: 50px;
  gap: 10px;
  border: none;
  background-color: #010101;
  color: white;
  border-radius: 15px;
  cursor: pointer;
}

.tiktok-text {
  transition: none 0.3s ease;
  font-weight: bold;
  font-size: 1rem;
}

.tiktok:hover .tiktok-text {
  display: none;
  position: absolute;
}

.tiktok-svg {
  width: 23px;
  height: 23px;
  transition: 0.8s;
}

.tiktok:hover .tiktok-svg {
  margin-left: 40px;
  display: block;
  transform: scale(1.2);
}

.locket {
  transition: none 0.5s ease;
  display: flex;
  align-items: center;
  position: absolute; 
  top: 260px; /* Canh giữa chiều dọc */
  right: 210px; /* Đẩy nút ra ngoài bên phải card */
  transform: translateY(-50%); /* Canh chỉnh chính giữa */
  padding-left: 10px;
  padding-right: 10px;
  width: 130px;
  height: 50px;
  gap: 10px;
  border: none;
  background-color: #ffd700;
  color: white;
  border-radius: 15px;
  cursor: pointer;
}

.locket-text {
  transition: none 0.3s ease;
  font-weight: bold;
  font-size: 1rem;
}

.locket:hover .locket-text {
  display: none;
  position: absolute;
}

.locket-svg {
  width: 23px;
  height: 23px;
  transition: 0.8s;
}

.locket:hover .locket-svg {
  margin-left: 40px;
  display: block;
  transform: scale(1.2);
}

.zalo:hover .zalo-img {
  margin-left: 40px;
  display: block;
  transform: scale(1.2);
}


.heart-container {
  position: absolute; 
  top: 10px; 
  left: 10px; 
  z-index: 10; 
  display: flex;
  justify-content: center;
  align-items: center;
  width: 50px;
  height: 50px;
  cursor: pointer;
  --heart-color: rgb(255, 91, 137);
  transition: .3s;
}

.heart-container .checkbox {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 20;
  cursor: pointer;
}

.heart-container .svg-container {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.heart-container .svg-outline,
        .heart-container .svg-filled {
  fill: var(--heart-color);
  position: absolute;
}

.heart-container .svg-filled {
  animation: keyframes-svg-filled 1s;
  display: none;
}

.heart-container .svg-celebrate {
  position: absolute;
  animation: keyframes-svg-celebrate .5s;
  animation-fill-mode: forwards;
  display: none;
  stroke: var(--heart-color);
  fill: var(--heart-color);
  stroke-width: 2px;
}

.heart-container .checkbox:checked~.svg-container .svg-filled {
  display: block
}

.heart-container .checkbox:checked~.svg-container .svg-celebrate {
  display: block
}

@keyframes keyframes-svg-filled {
  0% {
    transform: scale(0);
  }

  25% {
    transform: scale(1.2);
  }

  50% {
    transform: scale(1);
    filter: brightness(1.5);
  }
}

@keyframes keyframes-svg-celebrate {
  0% {
    transform: scale(0);
  }

  50% {
    opacity: 1;
    filter: brightness(1.5);
  }

  100% {
    transform: scale(1.4);
    opacity: 0;
    display: none;
  }
}
.like-count {
  position: absolute;
  top: 50%; /* Canh giữa theo chiều dọc của nút trái tim */
  left: 60px; /* Cách nút trái tim 60px sang bên phải */
  transform: translateY(-50%); /* Canh chỉnh chính giữa theo chiều dọc */
  font-size: 14px;
  font-weight: bold;
  color: #fff;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 5px 10px;
  border-radius: 10px;
  display: block; /* Luôn hiển thị */
}
